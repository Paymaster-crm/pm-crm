"use strict";(self.webpackChunkpaymaster_crm=self.webpackChunkpaymaster_crm||[]).push([[815],{815:(e,n,i)=>{i.r(n),i.d(n,{default:()=>c});var a=i(9950),t=i(8233),r=i(9246),o=i(8429),l=i(4414);function s(){const[e,n]=a.useState([]),i=(0,o.Zp)();a.useEffect((()=>{!async function(){try{const e=await(0,r.A)("https://sameer-yadav.online/api/view-job-openings",{withCredentials:!0});n(e.data)}catch(e){console.error("Error occurred while fetching job openings:",e)}}()}),[]);const s=[{accessorKey:"jobTitle",header:"Job Title",enableSorting:!1,size:160},{accessorKey:"jobPostingDate",header:"Job Posting Date",enableSorting:!1,size:140,Cell:e=>{let{cell:n}=e;return(0,l.jsx)(l.Fragment,{children:new Date(n.row.original.jobPostingDate).toLocaleDateString("en-US",{year:"numeric",month:"2-digit",day:"2-digit"})})}},{accessorKey:"applicationDeadline",header:"Application Deadline",enableSorting:!1,size:120,Cell:e=>{let{cell:n}=e;return(0,l.jsx)(l.Fragment,{children:new Date(n.row.original.applicationDeadline).toLocaleDateString("en-US",{year:"numeric",month:"2-digit",day:"2-digit"})})}},{accessorKey:"requiredSkills",header:"Required Skills",enableSorting:!1,size:120},{accessorKey:"experience",header:"Experience",enableSorting:!1,size:160},{accessorKey:"employmentType",header:"Employment Type",enableSorting:!1,size:230},{accessorKey:"budget",header:"Budget",enableSorting:!1,size:180,Cell:e=>{let{cell:n}=e;return(0,l.jsxs)(l.Fragment,{children:[`${n.row.original.budget[0]} LPA`," -",`${n.row.original.budget[1]} LPA`]})}},{accessorKey:"hiringManager",header:"Hiring Manager",enableSorting:!1,size:180}],c=e=>{const n=new Date(e.original.applicationDeadline);return new Date>=n?"inactive-job-opening":""},g=(0,t.Up)({columns:s,data:e,enableColumnResizing:!0,enableColumnOrdering:!0,enableDensityToggle:!1,enablePagination:!1,enableBottomToolbar:!1,initialState:{density:"compact"},enableGrouping:!0,enableColumnFilters:!1,enableColumnActions:!1,enableStickyHeader:!0,muiTableContainerProps:{sx:{maxHeight:"650px",overflowY:"auto"}},muiTableBodyRowProps:e=>{let{row:n}=e;return{className:c(n),onClick:()=>i(`/view-job-opening/${n.original._id}`),style:{cursor:"pointer"}}},muiTableHeadCellProps:{sx:{position:"sticky",top:0,zIndex:1}}});return(0,l.jsx)("div",{children:(0,l.jsx)(t.zp,{table:g})})}const c=a.memo(s)}}]);